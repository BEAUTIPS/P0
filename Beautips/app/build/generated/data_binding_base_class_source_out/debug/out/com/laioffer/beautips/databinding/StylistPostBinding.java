// Generated by view binder compiler. Do not edit!
package com.laioffer.beautips.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.laioffer.beautips.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StylistPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView numThums;

  @NonNull
  public final ImageView postPic;

  @NonNull
  public final TextView stylistNamePost;

  @NonNull
  public final ImageView stylistProfileImage2;

  @NonNull
  public final ImageView thumb;

  private StylistPostBinding(@NonNull ConstraintLayout rootView, @NonNull TextView numThums,
      @NonNull ImageView postPic, @NonNull TextView stylistNamePost,
      @NonNull ImageView stylistProfileImage2, @NonNull ImageView thumb) {
    this.rootView = rootView;
    this.numThums = numThums;
    this.postPic = postPic;
    this.stylistNamePost = stylistNamePost;
    this.stylistProfileImage2 = stylistProfileImage2;
    this.thumb = thumb;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StylistPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StylistPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.stylist_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StylistPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.num_thums;
      TextView numThums = rootView.findViewById(id);
      if (numThums == null) {
        break missingId;
      }

      id = R.id.postPic;
      ImageView postPic = rootView.findViewById(id);
      if (postPic == null) {
        break missingId;
      }

      id = R.id.stylist_name_post;
      TextView stylistNamePost = rootView.findViewById(id);
      if (stylistNamePost == null) {
        break missingId;
      }

      id = R.id.stylist_profile_image2;
      ImageView stylistProfileImage2 = rootView.findViewById(id);
      if (stylistProfileImage2 == null) {
        break missingId;
      }

      id = R.id.thumb;
      ImageView thumb = rootView.findViewById(id);
      if (thumb == null) {
        break missingId;
      }

      return new StylistPostBinding((ConstraintLayout) rootView, numThums, postPic, stylistNamePost,
          stylistProfileImage2, thumb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
